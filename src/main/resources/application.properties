spring.application.name=loving

# Server Configuration

# Make Spring Boot listen on all interfaces (required for Docker/Render)
server.address=0.0.0.0

# Use the PORT environment variable if set (Render/Cloud Run) or default to 8080 for local)
server.port=${PORT:8080}

# CORS Configuration
cors.allowed.origins=*
cors.allowed.methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed.headers=*

# Supabase PostgreSQL Configuration - Using connection pooling
spring.datasource.url=jdbc:postgresql://aws-1-ap-south-1.pooler.supabase.com:5432/postgres
spring.datasource.username=postgres.yrmjthhipizgxpkmkyvh
spring.datasource.password=V*@q%At%w!PvF6J
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection properties
# SSL Configuration
spring.datasource.hikari.data-source-properties.ssl=true
spring.datasource.hikari.data-source-properties.sslmode=require

# JPA/Hibernate - Set to create-drop to drop and recreate tables on startup
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# AI Configuration
ai.provider=perplexity
ai.perplexity.api-key=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
ai.perplexity.model=sonar-pro
ai.perplexity.max-tokens=1000
ai.perplexity.temperature=0.7

